/* 
// ╔╗ ╔═╗╔╗╔╔╦╗╔═╗
// ╠╩╗║╣ ║║║ ║ ║ ║
// ╚═╝╚═╝╝╚╝ ╩ ╚═╝ 
*/

/* V A R I A B L E S */

@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;700&display=swap"); /* Font Import */

:root {
  /* Font Size */
  --fg-primary: 12vh; /* Time and Greetings */
  --fg-secondary: 3vh; /* Greetings and Weather widger */
  --fg-date: 8vh; /* Date */
  --fg-list: 2vh; /* Links List */
  --icon: 3vh; /* Icon Size */

  /* Fonts Color */
  --fg: #3a3a3a; /* Foreground color */
  --sfg: #494949; /* Sceondary Foreground color */

  /* Light Colors  */
  --accent: #57a0d9; /* Hover color */
  --background: #f5f5f5; /* Background color */
  --cards: #e4e6e6; /* Cards color */

  /* Image background  */
  --imgbg: url(assets/background.jpg); /* Image URL */
  --imgcol: linear-gradient(
    rgba(255, 255, 255, 0.7),
    rgba(255, 255, 255, 0.7)
  ); /* Filter color */
}

.darktheme {
  /* Dark Colors  */
  --accent: #57a0d9; /* Hover color */
  --background: #19171a; /* Background color */
  --cards: #201e21; /* Cards color */

  /* Fonts Color */
  --fg: #d8dee9; /* Foreground color */
  --sfg: #2c292e; /* Secondary Foreground color */

  /* Image background  */
  --imgcol: linear-gradient(
    rgba(0, 0, 0, 0.85),
    rgba(0, 0, 0, 0.85)
  ); /* Filter color */
}

/* S T Y L E S */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Open Sans", sans-serif;
  transition: 0.2s ease-in-out;
}

body {
  width: 100vw;
  height: 100vh;
  background-color: var(--background);
  display: flex;
  align-items: center;
  justify-content: center;
}

.notransition {
  -webkit-transition: none;
  -moz-transition: none;
  -o-transition: none;
  transition: none;
}

.withImageBackground {
  background-image: var(--imgcol), var(--imgbg);
  background-size: cover;
}

#themeIcon {
  width: 25px;
  height: 25px;
}

.container {
  width: 90vw; /* 100% of the viewport width */
  height: 90vh; /* 100% of the viewport height */
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
  grid-gap: 30px;
  padding: 20px;
  position: relative;
  max-width: none; /* Remove the max-width restriction */
}

.card {
  background-color: var(--cards);
  box-shadow: 0 5px 7px rgba(0, 0, 0, 0.35);
  border-radius: 5px;
}

.card:hover {
  transform: translateY(-0.2rem);
  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.35);
}

/* Added */

.textBlock {
  grid-row: 3 / span 2;
  grid-column: 3 / span 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: top;
  margin-top: 20px;
}

.textcard {
  background-color: var(--cards);
  box-shadow: 0 5px 7px rgba(0, 0, 0, 0.35);
  border-radius: 5px;
  display: flex;
  width: 100%; /* Set the width to your desired size */
  height: 70%;
}

.textcard:hover {
  transform: translateY(-0.2rem);
  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.35);
}

.textcard p {
  margin: 10px; /* Remove default margin */
  font-size: 1.25vw; /* Set the font size for the text */
  color: var(--fg); /* Set the text color */
  text-align: left;
  font-family: "Open Sans", sans-serif;
}

.picBlock {
  grid-row: 1 / span 2;
  grid-column: 3 / span 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 50px;
  margin-left: 10vw;
  position: relative;
}

.piccard {
  display: flex;
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
  background-color: var(--cards);
  box-shadow: 0 5px 7px rgba(0, 0, 0, 0.35);
  border-radius: 5px;
  overflow: hidden; /* Keeps everything neat */
  /* Ensure width and height are set to contain the image as you want */
  width: 100%;
  height: 100%;
}

.piccard:hover {
  transform: translateY(-0.2rem);
  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.35);
}

.profilePhoto img {
  width: 100%; /* Make the image width always 100% of .piccard */
  height: 100%; /* Maintain aspect ratio */
  border-radius: 50%; /* Keeps the circular shape */
  object-fit: cover; /* Ensures the image covers the area without distortion, maintaining aspect ratio */
}

.logoBlock {
  grid-row: 1 / span 2;
  grid-column: 3 / span 1;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  margin-top: 50px;
  position: relative;
}

.logocard {
  display: flex;
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
  background-color: var(--cards);
  box-shadow: 0 5px 7px rgba(0, 0, 0, 0.35);
  border-radius: 5px;
  overflow: hidden; /* Keeps everything neat */
  /* Ensure width and height are set to contain the image as you want */
  width: 45%;
  height: 100%;
}

.logocard:hover {
  transform: translateY(-0.2rem);
  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.35);
}

.logoImage {
  width: 100%; /* Make the image width always 100% of .piccard */
  height: 100%; /* Maintain aspect ratio */
  border-radius: 50%; /* Keeps the circular shape */
  object-fit: cover; /* Ensures the image covers the area without distortion, maintaining aspect ratio */
}

/* Added */

.timeBlock {
  grid-row: 1 / span 2;
  grid-column: 1 / span 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.timeContainer {
  /* New container for time specifically */
  display: flex;
  justify-content: center;
  align-items: baseline; /* Adjusts items to align baselines; change as needed */
}

.weatherBlock {
  grid-column: 3 / span 2;
  grid-row: 1 / span 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.date {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 30px;
}

.weather {
  display: flex;
  align-items: center;
  justify-content: center;
}

.clock {
  display: flex;
  align-items: center;
  justify-content: center;
}

#hour,
#separator,
#minutes,
#month,
#day {
  margin-top: 0; /* Removes additional top margin */
  font-weight: bolder;
  color: var(--fg);
}

#hour,
#separator,
#minutes {
  font-size: var(--fg-primary);
}

#month,
#day {
  font-size: var(--fg-date);
  margin-left: 20px; /* Adjust if keeping them inline */
}

#greetings {
  font-size: var(--fg-secondary);
  color: var(--fg);
  text-align: center; /* Center text */
  margin-top: 0px;
}

.weatherIcon img {
  width: 70px;
  height: 70px;
}

.weatherValue p {
  font-size: var(--fg-secondary);
  font-weight: bolder;
  margin-left: 15px;
  color: var(--fg);
}

.weatherDescription p {
  font-size: var(--fg-secondary);
  margin-left: 15px;
  color: var(--fg);
}

.reduceGap {
  grid-gap: 2rem !important;
}

.removeGap {
  grid-gap: 0 !important;
}

.linksBlock {
  grid-row: 3 / span 2;
  grid-column: 1 / span 4;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, 1fr);
  grid-gap: 1.5rem;
}

.linksBlockLeft {
  grid-row: 1 / span 2;
  grid-column: 1 / span 2;
}

.linksBlockRight {
  grid-row: 1 / span 2;
  grid-column: 3 / span 2;
}

.buttonsContainer {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
  grid-gap: 30px;
  padding: 20px;
}

.button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.buttonIcon {
  width: var(--icon);
  height: var(--icon);
  color: var(--fg);
}

.button__1 {
  grid-row: 1;
  grid-column: 1;
}
.button__2 {
  grid-row: 1;
  grid-column: 2;
}
.button__3 {
  grid-row: 2;
  grid-column: 1;
}
.button__4 {
  grid-row: 2;
  grid-column: 2;
}
.button__5 {
  grid-row: 1;
  grid-column: 3;
}
.button__6 {
  grid-row: 2;
  grid-column: 3;
}
.button:hover {
  background-color: var(--accent);
}
.button:hover svg {
  stroke: var(--sfg);
}

.listsContainer {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  grid-gap: 3rem;
  padding: 0.4rem;
}

.list {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.list__1 {
  grid-column: 1;
  grid-row: 1 / span 2;
}
.list__2 {
  grid-column: 2;
  grid-row: 1 / span 2;
}
.listIcon {
  /* margin-top: 3vh; */
  margin-bottom: 2vh;
  color: var(--fg);
  width: var(--icon);
  height: var(--icon);
}
.listItem {
  text-decoration: none;
  font-size: var(--fg-list);
  color: var(--fg);
  margin-top: 1vh;
  padding: 8px 12px;
  border-radius: 5px;
  font-weight: bold;
  text-align: center;
  width: 80%;
}
.listItem:hover {
  background-color: var(--accent);
  color: var(--sfg);
}

.topTab {
  overflow: hidden;
  background-color: #202020;
  position: fixed;
  width: 100%;
  top: 0;
  z-index: 1000;
  padding-left: 0; /* Reset padding */
  margin-left: 0; /* Ensure it starts from the very left */
  text-align: left; /* Aligns inline or inline-block children to the left */
}

#themeButton {
  position: absolute;
  margin: 2em 2em 0 0;
  right: 0;
  bottom: 1vh;
  color: var(--fg);
  border: none;
  cursor: pointer;
  background-color: #00000000;
}

.topTab .tablinks {
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
  background-color: #202020; /* Dark background for tabs */
  color: #b1b1b1; /* Lighter text for contrast */
}

.topTab .tablinks:hover {
  background-color: #191919; /* Darker grey on hover */
}

/* Style for active tab link */
.topTab .tablinks.active {
  background-color: #181818; /* Accent color for hover and active states */
  color: #ffffff;
}

.topTab .tablinks.active {
  font-weight: 700; /* Bold weight for active tab */
}

.tabcontent {
  display: none; /* Hide content by default */
  padding: 6px 12px;
  margin-top: 50px; /* Push down content to make space for the top tabs */
}

/* for about page */

.bento-container {
  width: 90vw; /* 100% of the viewport width */
  height: 70vh; /* 100% of the viewport height */
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* Adjust based on your layout needs */
  grid-auto-rows: minmax(100px, auto); /* Example row height */
  gap: 20px;
}

.bento-block {
  background-color: var(--cards);
  box-shadow: 0 5px 7px rgba(0, 0, 0, 0.35);
  border-radius: 5px;
  padding: 20px;
  box-sizing: border-box;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.bento-block:hover {
  transform: translateY(-0.2rem);
  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.35);
}

.bento-block p {
  margin: 10px;
  font-size: 1.25vw;
  color: var(--fg);
  text-align: left;
  font-family: "Open Sans", sans-serif;
}

.bento-block ul {
  margin: 10px;
  font-size: 1.25vw;
  color: var(--fg);
  text-align: left;
  font-family: "Open Sans", sans-serif;
}

.bento-block h2 {
  margin: 10px;
  font-size: 1.5vw;
  color: var(--fg);
  text-align: left;
  font-family: "Open Sans", sans-serif;
}

/* Size variations */
.bento-block.small {
  grid-column: span 1; /* Smaller blocks */
  grid-row: span 2;
}

.bento-block.medium {
  grid-column: span 2; /* Default size */
  grid-row: span 2;
}

.bento-block.large {
  grid-column: span 3; /* Larger blocks */
  grid-row: span 3;
}

.bento-block.long {
  grid-column: 4 / span 1; /* Assuming a 3-column layout */
  grid-row: -1 / span 5;
}

.top-right {
  /* Place in the last column of the first row */
  grid-column: 4; /* Assuming a 3-column layout */
  grid-row: 1;
}

/* Size variations */

.bento-block.proj {
  grid-column: span 3; /* Larger blocks */
  grid-row: span 2;
}

.bento-block.longR {
  grid-column: 4 / span 1; /* Assuming a 3-column layout */
  grid-row: -1 / span 6;
}

.bento-block.longL {
  grid-column: -20 / span 1; /* Assuming a 3-column layout */
  grid-row: -20 / span 1;
}

/* M E D I A - Q U E R I E S */

@media only screen and (max-width: 68.75em) {
  .container {
    grid-gap: 20px;
    padding: 40px;
    margin-right: 50px;
  }

  .timeBlock {
    grid-row: 1 / span 2;
    grid-column: 1 / span 4;
  }

  .weatherBlock {
    display: none;
  }

  #greetings {
    font-size: var(--fg-secondary);
  }

  .linksBlockRight {
    display: none;
  }

  .linksBlockLeft {
    grid-column: 1 / span 4;
  }

  .button {
    grid-gap: 3vw;
    padding-left: 100px;
    padding-right: 100px;
  }

  .textBlock,
  .logoBlock,
  .picBlock {
    display: none; /* Hide these elements on smaller screens */
  }

  .topTab {
    display: none;
  }
}
